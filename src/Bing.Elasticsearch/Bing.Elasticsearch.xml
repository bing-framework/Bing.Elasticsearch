<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bing.Elasticsearch</name>
    </assembly>
    <members>
        <member name="T:Bing.Data.IEsCondition">
            <summary>
            ES搜索条件
            </summary>
        </member>
        <member name="M:Bing.Data.IEsCondition.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="T:Bing.Data.Queries.Conditions.DateRangeEsCondition`2">
            <summary>
            日期范围过滤条件 - 不包含时间
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateRangeEsCondition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Nullable{System.DateTime},System.Nullable{System.DateTime},Bing.Data.Queries.Boundary)">
            <summary>
            初始化一个<see cref="T:Bing.Data.Queries.Conditions.DateRangeEsCondition`2"/>类型的实例
            </summary>
            <param name="propertyExpression">属性表达式</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateRangeEsCondition`2.GetMinValue">
            <summary>
            获取最小值
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateRangeEsCondition`2.GetMaxValue">
            <summary>
            获取最大值
            </summary>
        </member>
        <member name="T:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2">
            <summary>
            日期范围过滤条件 - 包含时间
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Nullable{System.DateTime},System.Nullable{System.DateTime},Bing.Data.Queries.Boundary)">
            <summary>
            初始化一个<see cref="T:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2"/>类型的实例
            </summary>
            <param name="propertyExpression">属性表达式</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.IsMinGreaterMax(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            最小值是否大于最大值
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.CreateCondition">
            <summary>
            创建查询条件
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.SetField(Nest.DateRangeQuery,Nest.Field)">
            <summary>
            设置字段
            </summary>
            <param name="condition">查询条件</param>
            <param name="field">字段</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.SetGreaterEqual(Nest.DateRangeQuery,System.Nullable{System.DateTime})">
            <summary>
            设置大于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.SetGreater(Nest.DateRangeQuery,System.Nullable{System.DateTime})">
            <summary>
            设置大于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.SetLessEqual(Nest.DateRangeQuery,System.Nullable{System.DateTime})">
            <summary>
            设置小于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.SetLess(Nest.DateRangeQuery,System.Nullable{System.DateTime})">
            <summary>
            设置小于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="T:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2">
            <summary>
            double范围过滤条件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Nullable{System.Double},System.Nullable{System.Double},Bing.Data.Queries.Boundary)">
            <summary>
            初始化一个<see cref="T:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2"/>类型的实例
            </summary>
            <param name="propertyExpression">属性表达式</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.IsMinGreaterMax(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            最小值是否大于最大值
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.CreateCondition">
            <summary>
            创建查询条件
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.SetField(Nest.NumericRangeQuery,Nest.Field)">
            <summary>
            设置字段
            </summary>
            <param name="condition">查询条件</param>
            <param name="field">字段</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.SetGreaterEqual(Nest.NumericRangeQuery,System.Nullable{System.Double})">
            <summary>
            设置大于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.SetGreater(Nest.NumericRangeQuery,System.Nullable{System.Double})">
            <summary>
            设置大于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.SetLessEqual(Nest.NumericRangeQuery,System.Nullable{System.Double})">
            <summary>
            设置小于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.SetLess(Nest.NumericRangeQuery,System.Nullable{System.Double})">
            <summary>
            设置小于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="T:Bing.Data.Queries.Conditions.LongRangeEsCondition`2">
            <summary>
            long范围过滤退案件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Nullable{System.Int64},System.Nullable{System.Int64},Bing.Data.Queries.Boundary)">
            <summary>
            初始化一个<see cref="T:Bing.Data.Queries.Conditions.LongRangeEsCondition`2"/>类型的实例
            </summary>
            <param name="propertyExpression">属性表达式</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.IsMinGreaterMax(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            最小值是否大于最大值
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.CreateCondition">
            <summary>
            创建查询条件
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.SetField(Nest.LongRangeQuery,Nest.Field)">
            <summary>
            设置字段
            </summary>
            <param name="condition">查询条件</param>
            <param name="field">字段</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.SetGreaterEqual(Nest.LongRangeQuery,System.Nullable{System.Int64})">
            <summary>
            设置大于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.SetGreater(Nest.LongRangeQuery,System.Nullable{System.Int64})">
            <summary>
            设置大于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.SetLessEqual(Nest.LongRangeQuery,System.Nullable{System.Int64})">
            <summary>
            设置小于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.SetLess(Nest.LongRangeQuery,System.Nullable{System.Int64})">
            <summary>
            设置小于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="F:Bing.Data.Queries.Conditions.NullEsCondition.Instance">
            <summary>
            空查询条件实例
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.NullEsCondition.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="T:Bing.Data.Queries.Conditions.RangeEsConditionBase`4">
            <summary>
            范围过滤条件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
            <typeparam name="TValue">值类型</typeparam>
            <typeparam name="TQuery">查询类型</typeparam>
        </member>
        <member name="F:Bing.Data.Queries.Conditions.RangeEsConditionBase`4._field">
            <summary>
            字段
            </summary>
        </member>
        <member name="F:Bing.Data.Queries.Conditions.RangeEsConditionBase`4._min">
            <summary>
            最小值
            </summary>
        </member>
        <member name="F:Bing.Data.Queries.Conditions.RangeEsConditionBase`4._max">
            <summary>
            最大值
            </summary>
        </member>
        <member name="F:Bing.Data.Queries.Conditions.RangeEsConditionBase`4._boundary">
            <summary>
            包含边界
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Nullable{`2},System.Nullable{`2},Bing.Data.Queries.Boundary)">
            <summary>
            初始化一个<see cref="T:Bing.Data.Queries.Conditions.RangeEsConditionBase`4"/>类型的实例
            </summary>
            <param name="propertyExpression">属性表达式</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.Adjust(System.Nullable{`2},System.Nullable{`2})">
            <summary>
            当最小值大于最大值时进行校正
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.IsMinGreaterMax(System.Nullable{`2},System.Nullable{`2})">
            <summary>
            最小值是否大于最大值
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.CreateCondition">
            <summary>
            创建查询条件
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetField(`3,Nest.Field)">
            <summary>
            设置字段
            </summary>
            <param name="condition">查询条件</param>
            <param name="field">字段</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetLeftOperation(`3)">
            <summary>
            设置左操作
            </summary>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetGreaterEqual(`3,System.Nullable{`2})">
            <summary>
            设置大于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.GetMinValue">
            <summary>
            获取最小值
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetGreater(`3,System.Nullable{`2})">
            <summary>
            设置大于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetRightOperation(`3)">
            <summary>
            设置右操作
            </summary>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetLessEqual(`3,System.Nullable{`2})">
            <summary>
            设置小于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.GetMaxValue">
            <summary>
            获取最大值
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetLess(`3,System.Nullable{`2})">
            <summary>
            设置小于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="T:Bing.Data.Queries.EsQuery`1">
            <summary>
            ES查询
            </summary>
            <typeparam name="TResult">结果类型</typeparam>
        </member>
        <member name="F:Bing.Data.Queries.EsQuery`1._query">
            <summary>
            查询容器
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.And(Bing.Data.IEsCondition)">
            <summary>
            与连接
            </summary>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.And(Nest.QueryContainer)">
            <summary>
            与连接
            </summary>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Nest``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Bing.Data.IEsCondition)">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Nest``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Nest.QueryContainer)">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Nest``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{Bing.Data.Queries.EsQuery{`0}})">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="action">查询操作</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Term``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <summary>
            精确匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.TermIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object,System.Boolean)">
            <summary>
            精确匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.TermIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <summary>
            精确匹配词条，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Terms``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            精确匹配词条列表
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.TermsIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            精确匹配词条列表
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.TermsIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            精确匹配词条列表，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Match``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.MatchIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Boolean)">
            <summary>
            匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.MatchIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            匹配词条，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.MultiMatch(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            多字段匹配词条
            </summary>
            <param name="value">值</param>
            <param name="expressions">字段表达式列表</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.CreateFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            创建字段列表
            </summary>
            <param name="expressions">字段表达式列表</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.MultiMatchIfNotEmpty(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            多字段匹配词条，当值为空时忽略条件
            </summary>
            <param name="value">值</param>
            <param name="expressions">字段表达式列表</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Between``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Nullable{System.Int32},System.Nullable{System.Int32},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.BetweenIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Between``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Nullable{System.Double},System.Nullable{System.Double},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.BetweenIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Nullable{System.Double},System.Nullable{System.Double},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Between``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Nullable{Bing.Data.Queries.Boundary})">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Time</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="includeTime">是否包含时间</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Clauses.ClauseBase">
            <summary>
            ES子句基类
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Clauses.ClauseBase.EsBuilder">
            <summary>
            ES生成器
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.ClauseBase.#ctor(Bing.Elasticsearch.Builders.EsBuilderBase)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Builders.Clauses.ClauseBase"/>类型的实例
            </summary>
            <param name="esBuilder">ES生成器</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Clauses.EndClause">
            <summary>
            结束子句
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Clauses.EndClause._size">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Clauses.EndClause._from">
            <summary>
            起始行数
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.EndClause.#ctor(Bing.Elasticsearch.Builders.EsBuilderBase)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Builders.Clauses.EndClause"/>类型的实例
            </summary>
            <param name="esBuilder">ES生成器</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.EndClause.Skip(System.Int32)">
            <summary>
            设置跳过行数
            </summary>
            <param name="count">跳过行数</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.EndClause.Take(System.Int32)">
            <summary>
            设置获取行数
            </summary>
            <param name="count">获取的行数</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.EndClause.AppendTo(Nest.ISearchRequest)">
            <summary>
            添加到查询请求
            </summary>
            <param name="builder">查询请求</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.EndClause.GetFrom">
            <summary>
            获取起始行数
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.EndClause.GetSize">
            <summary>
            获取分页大小
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Clauses.FromClause">
            <summary>
            From 子句
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Clauses.FromClause._table">
            <summary>
            表名
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.FromClause.#ctor(Bing.Elasticsearch.Builders.EsBuilderBase)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Builders.Clauses.FromClause"/>类型的实例
            </summary>
            <param name="esBuilder">ES生成器</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.FromClause.From(System.String)">
            <summary>
            设置表名
            </summary>
            <param name="table">表名</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.FromClause.From``1">
            <summary>
            设置表名
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.FromClause.AppendTo(Nest.ISearchRequest)">
            <summary>
            添加到查询请求
            </summary>
            <param name="builder">查询请求</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.FromClause.PreInit">
            <summary>
            预先初始化
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Clauses.IEndClause">
            <summary>
            结束子句
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.IEndClause.Skip(System.Int32)">
            <summary>
            设置跳过行数
            </summary>
            <param name="count">跳过行数</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.IEndClause.Take(System.Int32)">
            <summary>
            设置获取行数
            </summary>
            <param name="count">获取的行数</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Clauses.IFromClause">
            <summary>
            From 子句
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.IFromClause.From(System.String)">
            <summary>
            设置表名
            </summary>
            <param name="table">表名</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.IFromClause.From``1">
            <summary>
            设置表名
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Clauses.IOrderByClause">
            <summary>
            Order By子句
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.IOrderByClause.OrderBy(System.String,System.Boolean)">
            <summary>
            排序
            </summary>
            <param name="column">列名</param>
            <param name="desc">是否倒序</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.IOrderByClause.OrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean)">
            <summary>
            排序
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="column">排序列</param>
            <param name="desc">是否倒序</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Clauses.IPreInitClause">
            <summary>
            预初始化子句
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.IPreInitClause.PreInit">
            <summary>
            预先初始化
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Clauses.ISelectClause">
            <summary>
            Select 子句
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.ISelectClause.Select">
            <summary>
            设置星号*列
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.ISelectClause.Select(System.String)">
            <summary>
            设置列名
            </summary>
            <param name="columns">列名</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.ISelectClause.Select``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            设置列名
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="column">列名表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.ISelectClause.RemoveSelect(System.String)">
            <summary>
            移除列名
            </summary>
            <param name="columns">列名</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.ISelectClause.RemoveSelect``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            移除列名
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="column">列名表达式</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Clauses.IWhereClause">
            <summary>
            Where子句
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.IWhereClause.And(Bing.Data.IEsCondition)">
            <summary>
            And连接条件
            </summary>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.IWhereClause.Or(Bing.Data.IEsCondition)">
            <summary>
            Or连接条件
            </summary>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.IWhereClause.Where``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            设置查询条件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="expression">查询条件表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.IWhereClause.Where``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,Bing.Operator)">
            <summary>
            设置查询条件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="expression">列名表达式</param>
            <param name="value">值</param>
            <param name="operator">运算符</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Clauses.OrderByClause">
            <summary>
            Order By子句
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Clauses.OrderByClause._sorts">
            <summary>
            排序列表
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.OrderByClause.#ctor(Bing.Elasticsearch.Builders.EsBuilderBase)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Builders.Clauses.OrderByClause"/>类型的实例
            </summary>
            <param name="esBuilder">ES生成器</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.OrderByClause.OrderBy(System.String,System.Boolean)">
            <summary>
            排序
            </summary>
            <param name="column">列名</param>
            <param name="desc">是否倒序</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.OrderByClause.OrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean)">
            <summary>
            排序
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="column">排序列</param>
            <param name="desc">是否倒序</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.OrderByClause.GetOrder(System.Boolean)">
            <summary>
            获取排序方向
            </summary>
            <param name="desc">是否降序排序</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.OrderByClause.AppendTo(Nest.ISearchRequest)">
            <summary>
            添加到查询请求
            </summary>
            <param name="builder">查询请求</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Clauses.SelectClause">
            <summary>
            Select 子句
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Clauses.SelectClause._includeFields">
            <summary>
            包含字段集合
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Clauses.SelectClause._excludeFields">
            <summary>
            排除字段集合
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.SelectClause.#ctor(Bing.Elasticsearch.Builders.EsBuilderBase)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Builders.Clauses.ClauseBase"/>类型的实例
            </summary>
            <param name="esBuilder">ES生成器</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.SelectClause.Select">
            <summary>
            设置星号*列
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.SelectClause.Select(System.String)">
            <summary>
            设置列名
            </summary>
            <param name="columns">列名</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.SelectClause.Select``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            设置列名
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="column">表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.SelectClause.RemoveSelect(System.String)">
            <summary>
            移除列名
            </summary>
            <param name="columns">列名</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.SelectClause.RemoveSelect``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            移除列名
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="column">表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.SelectClause.AppendTo(Nest.ISearchRequest)">
            <summary>
            添加到查询请求
            </summary>
            <param name="builder">查询请求</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.SelectClause.GetSource">
            <summary>
            获取源过滤器
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.SelectClause.GetIncludeFields">
            <summary>
            获取包含字段
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.SelectClause.GetExcludeFields">
            <summary>
            获取排除字段
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Clauses.WhereClause">
            <summary>
            Where子句
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Clauses.WhereClause._condition">
            <summary>
            查询条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.WhereClause.#ctor(Bing.Elasticsearch.Builders.EsBuilderBase)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Builders.Clauses.WhereClause"/>类型的实例
            </summary>
            <param name="esBuilder">ES生成器</param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.WhereClause.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.WhereClause.And(Bing.Data.IEsCondition)">
            <summary>
            And连接条件
            </summary>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.WhereClause.Or(Bing.Data.IEsCondition)">
            <summary>
            Or连接条件
            </summary>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.WhereClause.Where``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}})">
            <summary>
            设置查询条件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="expression">查询条件表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.WhereClause.Where``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,Bing.Operator)">
            <summary>
            设置查询条件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="expression">列名表达式</param>
            <param name="value">值</param>
            <param name="operator">运算符</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Clauses.WhereClause.AppendTo(Nest.ISearchRequest)">
            <summary>
            添加到查询请求
            </summary>
            <param name="builder">查询请求</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Conditions.AndCondition">
            <summary>
            And连接条件
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Conditions.AndCondition._condition1">
            <summary>
            ES条件1
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Conditions.AndCondition._condition2">
            <summary>
            ES条件2
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.AndCondition.#ctor(Bing.Data.IEsCondition,Bing.Data.IEsCondition)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Builders.Conditions.AndCondition"/>
            </summary>
            <param name="condition1">ES条件1</param>
            <param name="condition2">ES条件2</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.AndCondition.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Conditions.CompareConditionBase`2">
            <summary>
            比较条件基类
            </summary>
            <typeparam name="TValue">值类型</typeparam>
            <typeparam name="TQuery">字段名称查询类型</typeparam>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Conditions.CompareConditionBase`2._operator">
            <summary>
            查询操作符
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.CompareConditionBase`2.#ctor(Nest.Field,System.Object,Bing.Operator)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Builders.Conditions.CompareConditionBase`2"/>类型的实例
            </summary>
            <param name="column">列名</param>
            <param name="value">值</param>
            <param name="operator">操作符</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.CompareConditionBase`2.CreateCondition">
            <summary>
            创建查询条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.CompareConditionBase`2.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.CompareConditionBase`2.GetValue">
            <summary>
            获取值
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.CompareConditionBase`2.SetLess(`1,System.Nullable{`0})">
            <summary>
            设置小于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.CompareConditionBase`2.SetLessEqual(`1,System.Nullable{`0})">
            <summary>
            设置小于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.CompareConditionBase`2.SetGreater(`1,System.Nullable{`0})">
            <summary>
            设置大于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.CompareConditionBase`2.SetGreaterEqual(`1,System.Nullable{`0})">
            <summary>
            设置大于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Conditions.DateTimeCompareCondition">
            <summary>
            日期比较过滤条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.DateTimeCompareCondition.#ctor(Nest.Field,System.Object,Bing.Operator)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Builders.Conditions.DateTimeCompareCondition"/>类型的实例
            </summary>
            <param name="column">列名</param>
            <param name="value">值</param>
            <param name="operator">查询操作符</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.DateTimeCompareCondition.GetValue">
            <summary>
            获取值
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.DateTimeCompareCondition.SetLess(Nest.DateRangeQuery,System.Nullable{System.DateTime})">
            <summary>
            设置小于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.DateTimeCompareCondition.SetLessEqual(Nest.DateRangeQuery,System.Nullable{System.DateTime})">
            <summary>
            设置小于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.DateTimeCompareCondition.SetGreater(Nest.DateRangeQuery,System.Nullable{System.DateTime})">
            <summary>
            设置大于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.DateTimeCompareCondition.SetGreaterEqual(Nest.DateRangeQuery,System.Nullable{System.DateTime})">
            <summary>
            设置大于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Conditions.EqualCondition">
            <summary>
            相等查询条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.EqualCondition.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Conditions.EsConditionBase">
            <summary>
            ES查询条件基类
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Conditions.EsConditionBase.Column">
            <summary>
            列名
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Conditions.EsConditionBase.Value">
            <summary>
            值
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.EsConditionBase.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Conditions.GreaterCondition">
            <summary>
            大于查询条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.GreaterCondition.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Conditions.InCondition">
            <summary>
            In查询条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.InCondition.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.InCondition.GetValues">
            <summary>
            获取值
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Conditions.LongCompareCondition">
            <summary>
            long比较过滤条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.LongCompareCondition.#ctor(Nest.Field,System.Object,Bing.Operator)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Builders.Conditions.LongCompareCondition"/>类型的实例
            </summary>
            <param name="column">列名</param>
            <param name="value">值</param>
            <param name="operator">查询操作符</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.LongCompareCondition.GetValue">
            <summary>
            获取值
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.LongCompareCondition.SetLess(Nest.LongRangeQuery,System.Nullable{System.Int64})">
            <summary>
            设置小于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.LongCompareCondition.SetLessEqual(Nest.LongRangeQuery,System.Nullable{System.Int64})">
            <summary>
            设置小于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.LongCompareCondition.SetGreater(Nest.LongRangeQuery,System.Nullable{System.Int64})">
            <summary>
            设置大于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.LongCompareCondition.SetGreaterEqual(Nest.LongRangeQuery,System.Nullable{System.Int64})">
            <summary>
            设置大于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Conditions.NotInCondition">
            <summary>
            Not In查询条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.NotInCondition.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.NotInCondition.GetValues">
            <summary>
            获取值
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Conditions.NumericCompareCondition">
            <summary>
            数值比较过滤条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.NumericCompareCondition.#ctor(Nest.Field,System.Object,Bing.Operator)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Builders.Conditions.NumericCompareCondition"/>类型的实例
            </summary>
            <param name="column">列名</param>
            <param name="value">值</param>
            <param name="operator">查询操作符</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.NumericCompareCondition.GetValue">
            <summary>
            获取值
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.NumericCompareCondition.SetLess(Nest.NumericRangeQuery,System.Nullable{System.Double})">
            <summary>
            设置小于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.NumericCompareCondition.SetLessEqual(Nest.NumericRangeQuery,System.Nullable{System.Double})">
            <summary>
            设置小于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.NumericCompareCondition.SetGreater(Nest.NumericRangeQuery,System.Nullable{System.Double})">
            <summary>
            设置大于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.NumericCompareCondition.SetGreaterEqual(Nest.NumericRangeQuery,System.Nullable{System.Double})">
            <summary>
            设置大于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Conditions.OrCondition">
            <summary>
            Or连接条件
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Conditions.OrCondition._condition1">
            <summary>
            ES条件1
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.Conditions.OrCondition._condition2">
            <summary>
            ES条件2
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.OrCondition.#ctor(Bing.Data.IEsCondition,Bing.Data.IEsCondition)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Builders.Conditions.OrCondition"/>类型的实例
            </summary>
            <param name="condition1">ES条件1</param>
            <param name="condition2">ES条件2</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Conditions.OrCondition.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.EsBuilder">
            <summary>
            ES生成器
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.EsBuilderBase">
            <summary>
            ES生成器基类
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.EsBuilderBase._index">
            <summary>
            索引
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.EsBuilderBase._selectClause">
            <summary>
            Select子句
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.EsBuilderBase._fromClause">
            <summary>
            From子句
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.EsBuilderBase._whereClause">
            <summary>
            Where子句
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.EsBuilderBase._orderByClause">
            <summary>
            OrderBy子句
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.EsBuilderBase._endClause">
            <summary>
            结束子句
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.EsBuilderBase._indexNameResolver">
            <summary>
            索引名称解析器
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Builders.EsBuilderBase._conditionFactory">
            <summary>
            ES条件工厂
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Builders.EsBuilderBase.SelectClause">
            <summary>
            Select子句
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Builders.EsBuilderBase.FromClause">
            <summary>
            From子句
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Builders.EsBuilderBase.WhereClause">
            <summary>
            Where子句
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Builders.EsBuilderBase.OrderByClause">
            <summary>
            OrderBy子句
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Builders.EsBuilderBase.EndClause">
            <summary>
            结束子句
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Builders.EsBuilderBase.IndexNameResolver">
            <summary>
            索引名称解析器
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Builders.EsBuilderBase.ConditionFactory">
            <summary>
            ES条件工厂
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsBuilderBase.CreateSelectClause">
            <summary>
            创建From子句
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsBuilderBase.CreateFromClause">
            <summary>
            创建From子句
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsBuilderBase.CreateWhereClause">
            <summary>
            创建Where子句
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsBuilderBase.CreateOrderByClause">
            <summary>
            创建OrderBy子句
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsBuilderBase.CreateEndClause">
            <summary>
            创建结束子句
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsBuilderBase.CreateConditionFactory">
            <summary>
            创建ES条件工厂
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsBuilderBase.GetSearchRequest">
            <summary>
            获取查询请求
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsBuilderBase.InitIndex(System.String)">
            <summary>
            初始化索引
            </summary>
            <param name="index">索引名称</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsBuilderBase.AppendTo(Nest.ISearchRequest)">
            <summary>
            添加到查询请求
            </summary>
            <param name="builder">查询请求</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsBuilderBase.AppendEs(Nest.ISearchRequest,Bing.Elasticsearch.Builders.Clauses.IEsClause)">
            <summary>
            添加ES
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsBuilderExtensions.Select``1(Bing.Elasticsearch.IEsBuilder,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            设置列名
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="source">源</param>
            <param name="column">列名，范例：x=>appId</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsBuilderExtensions.RemoveSelect``1(Bing.Elasticsearch.IEsBuilder,System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            移除列名
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="source">源</param>
            <param name="column">列名，范例：x=>appId</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsBuilderExtensions.From``1(Bing.Elasticsearch.IEsBuilder)">
            <summary>
            设置表名
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="source">源</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.EsConditionFactory">
            <summary>
            ES条件工厂
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsConditionFactory.Create``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,Bing.Operator)">
            <summary>
            创建ES条件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="column">列名</param>
            <param name="value">值</param>
            <param name="operator">操作符</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsConditionFactory.CreateCompareCondition``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,Bing.Operator)">
            <summary>
            创建比较条件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="column">列名</param>
            <param name="value">值</param>
            <param name="operator">操作符</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsConditionFactory.IsInCondition(Bing.Operator,System.Object)">
            <summary>
            是否In条件
            </summary>
            <param name="operator">运算符</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsConditionFactory.IsNotInCondition(Bing.Operator,System.Object)">
            <summary>
            是否Not In条件
            </summary>
            <param name="operator">运算符</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.EsConditionFactory.Create``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Object,Bing.Data.Queries.Boundary)">
            <summary>
            创建ES范围条件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="column">列名</param>
            <param name="minValue">最小值</param>
            <param name="maxValue">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.IEsConditionFactory">
            <summary>
            ES条件工厂
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.IEsConditionFactory.Create``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,Bing.Operator)">
            <summary>
            创建ES条件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="column">列名</param>
            <param name="value">值</param>
            <param name="operator">操作符</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.IEsConditionFactory.Create``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Object,System.Object,Bing.Data.Queries.Boundary)">
            <summary>
            创建ES范围条件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="column">列名</param>
            <param name="minValue">最小值</param>
            <param name="maxValue">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.IEsContent">
            <summary>
            ES内容
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.IEsContent.AppendTo(Nest.ISearchRequest)">
            <summary>
            添加到查询请求
            </summary>
            <param name="builder">查询请求</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.IEsPartAccessor">
            <summary>
            ES子句访问器
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Builders.IEsPartAccessor.SelectClause">
            <summary>
            Select子句
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Builders.IEsPartAccessor.FromClause">
            <summary>
            From子句
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Builders.IEsPartAccessor.WhereClause">
            <summary>
            Where子句
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Builders.IEsPartAccessor.OrderByClause">
            <summary>
            OrderBy子句
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Builders.IEsPartAccessor.EndClause">
            <summary>
            结束子句
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Internal.EsQueryCreator">
            <summary>
            ES查询创建器
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Internal.EsQueryCreator.CreateIdsQuery(System.Collections.Generic.IEnumerable{Nest.Id})">
            <summary>
            创建ID查询。仅仅过滤与所提供的ID相匹配的文档
            </summary>
            <param name="values">数值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Internal.EsQueryCreator.CreateWildcardQuery(System.String,System.Object)">
            <summary>
            创建通配符查询。匹配与通配符表达式具有匹配字段的文档。
            </summary>
            <param name="field">字段</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Internal.EsQueryCreator.CreateTermQuery(System.String,System.Object)">
            <summary>
            创建项查询。查找包含在反向索引中指定的确切项的文档。
            </summary>
            <param name="field">字段</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Internal.Helper.GetColumn(System.Linq.Expressions.Expression,System.Type)">
            <summary>
            获取列名
            </summary>
            <param name="expression">表达式</param>
            <param name="type">实体类型</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Internal.Helper.GetColumn``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
            获取列名
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="expression">表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Internal.Helper.IsInCondition(Bing.Operator,System.Object)">
            <summary>
            是否In条件
            </summary>
            <param name="operator">运算符</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Internal.Helper.IsNotInCondition(Bing.Operator,System.Object)">
            <summary>
            是否Not In条件
            </summary>
            <param name="operator">运算符</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Internal.Helper.CreateInCondition(System.String,System.Collections.IEnumerable,System.Boolean)">
            <summary>
            创建In条件
            </summary>
            <param name="column">列名</param>
            <param name="values">值列表</param>
            <param name="notIn">是否Not In条件</param>
        </member>
        <member name="M:Bing.Elasticsearch.Builders.Internal.Helper.CreateInCondition(Nest.Field,System.Collections.IEnumerable,System.Boolean)">
            <summary>
            创建In条件
            </summary>
            <param name="column">列名</param>
            <param name="values">值列表</param>
            <param name="notIn">是否Not In条件</param>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Operations.IEnd">
            <summary>
            结束子句
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Operations.IFrom">
            <summary>
            From 子句操作
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Operations.IOrderBy">
            <summary>
            OrderBy 子句操作
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Operations.IQueryOperation">
            <summary>
            查询操作
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Operations.ISelect">
            <summary>
            Select 子句操作
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Builders.Operations.IWhere">
            <summary>
            Where 子句操作
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.ElasticsearchContextExtensions">
            <summary>
            ES上下文扩展
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContextExtensions.SearchAsync``1(Bing.Elasticsearch.IElasticsearchContext,System.String,System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            查询。单一条件查询，一般是精确查询
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="context">ES上下恩</param>
            <param name="field">字段名</param>
            <param name="value">值</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="T:Bing.Elasticsearch.EndClauseExtensions">
            <summary>
            结束子句操作扩展
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.EndClauseExtensions.Skip``1(``0,System.Int32)">
            <summary>
            设置跳过行数
            </summary>
            <param name="source">源</param>
            <param name="count">跳过的行数</param>
        </member>
        <member name="M:Bing.Elasticsearch.EndClauseExtensions.Take``1(``0,System.Int32)">
            <summary>
            设置获取行数
            </summary>
            <param name="source">源</param>
            <param name="count">获取的行数</param>
        </member>
        <member name="T:Bing.Elasticsearch.ESAnalyzerConst">
            <summary>
            ES分词常量
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.ESAnalyzerConst.Ik">
            <summary>
            IK分词
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.ESAnalyzerConst.IkSmart">
            <summary>
            IK分词 - 将需要分词的文本做最大粒度的拆分。
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.ESAnalyzerConst.IkMaxWord">
            <summary>
            IK分词 - 将需要分词的文本做最小粒度的拆分，尽量分更多的词。
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.FromClauseExtensions">
            <summary>
            From子句扩展
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.IEsBuilder">
            <summary>
            ES生成器
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.IEsBuilder.GetSearchRequest">
            <summary>
            获取查询请求
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Models.EsScrollAllSearch`1">
            <summary>
            ES滚动查询模型
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsScrollAllSearch`1.#ctor(Bing.Elasticsearch.IElasticsearchContext)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Models.EsScrollAllSearch`1"/>类型的实例
            </summary>
            <param name="context">ES上下文</param>
        </member>
        <member name="T:Bing.Elasticsearch.Models.EsScrollAllSearch`2">
            <summary>
            ES滚动查询模型
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsScrollAllSearch`2.#ctor(Bing.Elasticsearch.IElasticsearchContext)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Models.EsScrollAllSearch`2"/>类型的实例
            </summary>
            <param name="context">ES上下文</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsScrollAllSearch`2.GetLargeListAsync(System.Int32,System.Double,System.Int32,System.Threading.CancellationToken)">
            <summary>
            获取大批量数据
            </summary>
            <param name="timeout">超时时间，单位：秒。默认：10秒</param>
            <param name="maximumRunTime">查询最大超时时间，单位：分钟。默认：20分钟</param>
            <param name="maxParallelism">最大并行度。默认：3</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="T:Bing.Elasticsearch.Models.EsSearch`1">
            <summary>
            ES查询模型
            </summary>
            <typeparam name="TResult">查询结果类型</typeparam>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearch`1.#ctor(Bing.Elasticsearch.IElasticsearchContext)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Models.EsSearch`1"/>类型的实例
            </summary>
            <param name="context">ES上下文</param>
        </member>
        <member name="T:Bing.Elasticsearch.Models.EsSearchBase`2">
            <summary>
            ES查询对象基类
            </summary>
            <typeparam name="TSearch">查询对象类型</typeparam>
            <typeparam name="TResult">查询结果类型</typeparam>
        </member>
        <member name="F:Bing.Elasticsearch.Models.EsSearchBase`2._context">
            <summary>
            ES上下文
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Models.EsSearchBase`2._index">
            <summary>
            索引
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Models.EsSearchBase`2._size">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Models.EsSearchBase`2._from">
            <summary>
            起始行数
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Models.EsSearchBase`2._sorts">
            <summary>
            排序列表
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Models.EsSearchBase`2._includeFields">
            <summary>
            包含字段集合
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Models.EsSearchBase`2._excludeFields">
            <summary>
            排除字段集合
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Models.EsSearchBase`2._collapseField">
            <summary>
            折叠字段
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Models.EsSearchBase`2._query">
            <summary>
            搜索条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.#ctor(Bing.Elasticsearch.IElasticsearchContext)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Models.EsSearchBase`2"/>类型的实例
            </summary>
            <param name="context">ES上下文</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.This">
            <summary>
            返回自身
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.Index(System.String)">
            <summary>
            设置索引名称或别名
            </summary>
            <param name="index">索引名称，也可以是别名</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.AllIndex">
            <summary>
            搜索全部索引
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.GetQuery">
            <summary>
            获取当前查询对象
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.NewQuery">
            <summary>
            创建新的查询对象
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.From(System.Int32)">
            <summary>
            设置起始行数，从0开始
            </summary>
            <param name="from">起始行数</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.Size(System.Int32)">
            <summary>
            设置分页大小
            </summary>
            <param name="size">分页大小</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Boolean)">
            <summary>
            排序
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">排序字段表达式</param>
            <param name="desc">是否降序排序</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.OrderByIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Boolean,System.Boolean)">
            <summary>
            排序
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">排序字段表达式</param>
            <param name="desc">是否降序排序</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.NestOrderBy``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Boolean)">
            <summary>
            嵌套属性排序
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">排序路径</param>
            <param name="expression">排序字段表达式</param>
            <param name="desc">是否降序排序</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.NestOrderByIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Boolean,System.Boolean)">
            <summary>
            嵌套属性排序
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">排序路径</param>
            <param name="expression">排序字段表达式</param>
            <param name="desc">是否降序排序</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.GetOrder(System.Boolean)">
            <summary>
            获取排序方向
            </summary>
            <param name="desc">是否降序排序</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.IncludeFields(System.String)">
            <summary>
            设置包含字段列表
            </summary>
            <param name="fields">字段列表</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.IncludeField``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
            <summary>
            设置包含字段
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.ExcludeFields(System.String)">
            <summary>
            设置排除字段列表
            </summary>
            <param name="fields">字段列表</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.ExcludeField``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
            <summary>
            设置排除字段
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.Collapse``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
            <summary>
            设置折叠字段
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.Nest``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},Bing.Data.IEsCondition)">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.Nest``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},Nest.QueryContainer)">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.Nest``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Action{Bing.Data.Queries.EsQuery{`1}})">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="action">查询操作</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.Term``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Object)">
            <summary>
            精确匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.TermIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Object,System.Boolean)">
            <summary>
            精确匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.TermIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Object)">
            <summary>
            精确匹配词条，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.Terms``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            精确匹配词条列表
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.TermsIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            精确匹配词条列表
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.TermsIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            精确匹配词条列表，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.Match``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.String)">
            <summary>
            匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.MatchIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.String,System.Boolean)">
            <summary>
            匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.MatchIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.String)">
            <summary>
            匹配词条，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.MultiMatch(System.String,System.Linq.Expressions.Expression{System.Func{`1,System.Object}}[])">
            <summary>
            多字段匹配词条
            </summary>
            <param name="value">值</param>
            <param name="expressions">字段表达式列表</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.MultiMatchIfNotEmpty(System.String,System.Linq.Expressions.Expression{System.Func{`1,System.Object}}[])">
            <summary>
            多字段匹配词条，当值为空时忽略条件
            </summary>
            <param name="value">值</param>
            <param name="expressions">字段表达式列表</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.Between``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Nullable{System.Int32},System.Nullable{System.Int32},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.BetweenIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.Between``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Nullable{System.Double},System.Nullable{System.Double},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.BetweenIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Boolean,System.Nullable{System.Double},System.Nullable{System.Double},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.Between``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Nullable{Bing.Data.Queries.Boundary})">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Time</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="includeTime">是否包含时间</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.GetEsResultAsync">
            <summary>
            获取ES结果
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.BuildSearchRequest">
            <summary>
            构建查询请求 
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.GetResultAsync">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.GetIndex">
            <summary>
            获取索引名称
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.GetFrom">
            <summary>
            获取起始行数
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.GetSize">
            <summary>
            获取分页大小
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.GetSource">
            <summary>
            获取源过滤器
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.GetIncludeFields">
            <summary>
            获取包含字段
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.GetExcludeFields">
            <summary>
            获取排除字段
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.GetCollapse">
            <summary>
            获取折叠
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.EsSearchBase`2.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Models.IEsSearch`2">
            <summary>
            ES查询对象
            </summary>
            <typeparam name="TSearch">ES查询对象类型</typeparam>
            <typeparam name="TResult">查询结果类型</typeparam>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.GetQuery">
            <summary>
            获取当前查询对象
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.NewQuery">
            <summary>
            创建新的查询对象
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.Index(System.String)">
            <summary>
            设置索引名称或别名
            </summary>
            <param name="index">索引名称，也可以是别名</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.AllIndex">
            <summary>
            搜索全部索引
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.From(System.Int32)">
            <summary>
            设置起始行数，从0开始
            </summary>
            <param name="from">起始行数</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.Size(System.Int32)">
            <summary>
            设置分页大小
            </summary>
            <param name="size">分页大小</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Boolean)">
            <summary>
            排序
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">排序字段表达式</param>
            <param name="desc">是否降序排序</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.OrderByIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Boolean,System.Boolean)">
            <summary>
            排序
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">排序字段表达式</param>
            <param name="desc">是否降序排序</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.NestOrderBy``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Boolean)">
            <summary>
            嵌套属性排序
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">排序路径</param>
            <param name="expression">排序字段表达式</param>
            <param name="desc">是否降序排序</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.NestOrderByIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Boolean,System.Boolean)">
            <summary>
            嵌套属性排序
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">排序路径</param>
            <param name="expression">排序字段表达式</param>
            <param name="desc">是否降序排序</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.IncludeFields(System.String)">
            <summary>
            设置包含字段列表
            </summary>
            <param name="fields">字段列表</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.IncludeField``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
            <summary>
            设置包含字段
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.ExcludeFields(System.String)">
            <summary>
            设置排除字段列表
            </summary>
            <param name="fields">字段列表</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.ExcludeField``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
            <summary>
            设置排除字段
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.Collapse``1(System.Linq.Expressions.Expression{System.Func{`1,``0}})">
            <summary>
            设置折叠字段
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.Nest``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},Bing.Data.IEsCondition)">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.Nest``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},Nest.QueryContainer)">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.Nest``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Action{Bing.Data.Queries.EsQuery{`1}})">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="action">查询操作</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.Term``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Object)">
            <summary>
            精确匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.TermIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Object,System.Boolean)">
            <summary>
            精确匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.TermIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Object)">
            <summary>
            精确匹配词条，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.Terms``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            精确匹配词条列表
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.TermsIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            精确匹配词条列表
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.TermsIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            精确匹配词条列表，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.Match``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.String)">
            <summary>
            匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.MatchIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.String,System.Boolean)">
            <summary>
            匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.MatchIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.String)">
            <summary>
            匹配词条，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.MultiMatch(System.String,System.Linq.Expressions.Expression{System.Func{`1,System.Object}}[])">
            <summary>
            多字段匹配词条
            </summary>
            <param name="value">值</param>
            <param name="expressions">字段表达式列表</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.MultiMatchIfNotEmpty(System.String,System.Linq.Expressions.Expression{System.Func{`1,System.Object}}[])">
            <summary>
            多字段匹配词条，当值为空时忽略条件
            </summary>
            <param name="value">值</param>
            <param name="expressions">字段表达式列表</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.Between``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Nullable{System.Int32},System.Nullable{System.Int32},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.BetweenIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.Between``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Nullable{System.Double},System.Nullable{System.Double},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.BetweenIf``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Boolean,System.Nullable{System.Double},System.Nullable{System.Double},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.Between``1(System.Linq.Expressions.Expression{System.Func{`1,``0}},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Nullable{Bing.Data.Queries.Boundary})">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Time</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="includeTime">是否包含时间</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.GetEsResultAsync">
            <summary>
            获取ES结果
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Models.IEsSearch`2.GetResultAsync">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1">
            <summary>
            ES只读仓储基类
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="F:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1._logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1._lazyClient">
            <summary>
            延迟加载的ES客户端
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1.Client">
            <summary>
            ES客户端
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1.Context">
            <summary>
            ES上下文
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1.IndexName">
            <summary>
            索引名称
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1.AliasName">
            <summary>
            别名
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1.Options">
            <summary>
            ES选项配置
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1.#ctor(Bing.Elasticsearch.IElasticsearchContext,Microsoft.Extensions.Options.IOptions{Bing.Elasticsearch.Options.ElasticsearchOptions})">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1"/>类型的实例
            </summary>
            <param name="context">ES上下文</param>
            <param name="options">ES选项配置</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1.FindByIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            通过标识查找
            </summary>
            <param name="id">标识</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1.FindByIdsAsync(System.String[])">
            <summary>
            通过标识集合查找
            </summary>
            <param name="ids">标识集合</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1.FindByIdsAsync(System.Int64[])">
            <summary>
            通过标识集合查找
            </summary>
            <param name="ids">标识集合</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1.FindByIdsAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            通过标识集合查找
            </summary>
            <param name="ids">标识集合</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsReadOnlyRepositoryBase`1.FindByIdsAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            通过标识集合查找
            </summary>
            <param name="ids">标识集合</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="T:Bing.Elasticsearch.Repositories.IEsSearchableReadOnlyRepository`1">
            <summary>
            ES可搜索的只读仓储
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="T:Bing.Elasticsearch.Repositories.EsRepository`1">
            <summary>
            ES仓储基类
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.#ctor(Bing.Elasticsearch.IElasticsearchContext,Microsoft.Extensions.Options.IOptions{Bing.Elasticsearch.Options.ElasticsearchOptions})">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Repositories.EsRepository`1"/>类型的实例
            </summary>
            <param name="context">ES上下文</param>
            <param name="options">ES选项配置</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.InsertAsync(`0,System.Threading.CancellationToken)">
            <summary>
            插入
            </summary>
            <param name="entity">实体</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.InsertManyAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            批量插入
            </summary>
            <param name="entities">实体集合</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.BulkInsertAsync(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32,System.Double,System.Threading.CancellationToken)">
            <summary>
            批量插入
            </summary>
            <param name="documents">文档集合</param>
            <param name="chunkSize">每次批量请求的数量。默认：51000</param>
            <param name="backOffTime">重试等待时间。默认：30s</param>
            <param name="retries">重试次数。默认：3</param>
            <param name="maxRuntime">最大运行时间。默认：15分钟</param>
            <param name="cancellationToken">取消令牌</param>
            <remarks>
            参考链接：https://www.elastic.co/guide/en/elasticsearch/client/net-api/current/indexing-documents.html
            </remarks>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.BulkAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            批量操作
            </summary>
            <param name="entities">实体集合</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.DeleteAsync(`0,System.Threading.CancellationToken)">
            <summary>
            删除
            </summary>
            <param name="entity">实体</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.DeleteAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            删除
            </summary>
            <param name="id">标识</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.DeleteByQueryAsync(Nest.DeleteByQueryDescriptor{`0},System.Threading.CancellationToken)">
            <summary>
            按查询条件删除
            </summary>
            <param name="descriptor">查询删除描述符</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            更新
            </summary>
            <param name="entity">实体</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.UpdateAsync(System.Object,`0,System.Threading.CancellationToken)">
            <summary>
            更新
            </summary>
            <param name="id">标识</param>
            <param name="entity">实体</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.UpdateByQueryAsync(Nest.UpdateByQueryDescriptor{`0},System.Threading.CancellationToken)">
            <summary>
            按查询条件更新
            </summary>
            <param name="descriptor">查询更新描述符</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.SearchAsync(Nest.SearchDescriptor{`0},System.Threading.CancellationToken)">
            <summary>
            查询
            </summary>
            <param name="descriptor">查询描述器</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.HitsSearchAsync(Nest.SearchDescriptor{`0},System.Threading.CancellationToken)">
            <summary>
            命中查询
            </summary>
            <param name="descriptor">查询描述符</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.AggregationsSearchAsync(Nest.SearchDescriptor{`0},System.String,System.Threading.CancellationToken)">
            <summary>
            聚合查询
            </summary>
            <param name="descriptor">查询描述符</param>
            <param name="key">键名</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.GetContext">
            <summary>
            获取ES上下文
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.EsRepository`1.ExistOrCreateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            不存在则创建
            </summary>
            <param name="indexName">索引名称</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="T:Bing.Elasticsearch.Repositories.IEsReadOnlyRepository`1">
            <summary>
            ES只读仓储
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsReadOnlyRepository`1.FindByIdAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            通过标识查找
            </summary>
            <param name="id">标识</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsReadOnlyRepository`1.FindByIdsAsync(System.String[])">
            <summary>
            通过标识集合查找
            </summary>
            <param name="ids">标识集合</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsReadOnlyRepository`1.FindByIdsAsync(System.Int64[])">
            <summary>
            通过标识集合查找
            </summary>
            <param name="ids">标识集合</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsReadOnlyRepository`1.FindByIdsAsync(System.Collections.Generic.IEnumerable{System.String},System.Threading.CancellationToken)">
            <summary>
            通过标识集合查找
            </summary>
            <param name="ids">标识集合</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsReadOnlyRepository`1.FindByIdsAsync(System.Collections.Generic.IEnumerable{System.Int64},System.Threading.CancellationToken)">
            <summary>
            通过标识集合查找
            </summary>
            <param name="ids">标识集合</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="T:Bing.Elasticsearch.Repositories.IEsRepository`1">
            <summary>
            ES仓储
            </summary>
            <typeparam name="TEntity">实体类类型</typeparam>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.InsertAsync(`0,System.Threading.CancellationToken)">
            <summary>
            插入
            </summary>
            <param name="entity">实体</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.InsertManyAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            批量插入
            </summary>
            <param name="entities">实体集合</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.BulkInsertAsync(System.Collections.Generic.IEnumerable{`0},System.Int32,System.Int32,System.Int32,System.Double,System.Threading.CancellationToken)">
            <summary>
            批量插入
            </summary>
            <param name="documents">文档集合</param>
            <param name="chunkSize">每次批量请求的数量。默认：51000</param>
            <param name="backOffTime">重试等待时间。默认：30s</param>
            <param name="retries">重试次数。默认：3</param>
            <param name="maxRuntime">最大运行时间。默认：15分钟</param>
            <param name="cancellationToken">取消令牌</param>
            <remarks>
            参考链接：https://www.elastic.co/guide/en/elasticsearch/client/net-api/current/indexing-documents.html
            </remarks>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.BulkAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
            批量操作
            </summary>
            <param name="entities">实体集合</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.DeleteAsync(`0,System.Threading.CancellationToken)">
            <summary>
            删除
            </summary>
            <param name="entity">实体</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.DeleteAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
            删除
            </summary>
            <param name="id">标识</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.DeleteByQueryAsync(Nest.DeleteByQueryDescriptor{`0},System.Threading.CancellationToken)">
            <summary>
            按查询条件删除
            </summary>
            <param name="descriptor">查询删除描述符</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.UpdateAsync(`0,System.Threading.CancellationToken)">
            <summary>
            更新
            </summary>
            <param name="entity">实体</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.UpdateAsync(System.Object,`0,System.Threading.CancellationToken)">
            <summary>
            更新
            </summary>
            <param name="id">标识</param>
            <param name="entity">实体</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.UpdateByQueryAsync(Nest.UpdateByQueryDescriptor{`0},System.Threading.CancellationToken)">
            <summary>
            按查询条件更新
            </summary>
            <param name="descriptor">查询更新描述符</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.SearchAsync(Nest.SearchDescriptor{`0},System.Threading.CancellationToken)">
            <summary>
            查询
            </summary>
            <param name="descriptor">查询描述器</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.HitsSearchAsync(Nest.SearchDescriptor{`0},System.Threading.CancellationToken)">
            <summary>
            命中查询
            </summary>
            <param name="descriptor">查询描述符</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.AggregationsSearchAsync(Nest.SearchDescriptor{`0},System.String,System.Threading.CancellationToken)">
            <summary>
            聚合查询
            </summary>
            <param name="descriptor">查询描述符</param>
            <param name="key">键名</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IEsRepository`1.GetContext">
            <summary>
            获取ES上下文
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Repositories.IIndexNameResolver">
            <summary>
            索引名称解析器
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IIndexNameResolver.GetIndexName(System.String)">
            <summary>
            获取索引名称
            </summary>
            <param name="indexName">索引名称</param>
        </member>
        <member name="T:Bing.Elasticsearch.Repositories.IndexNameResolver">
            <summary>
            索引名称解析器
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Repositories.IndexNameResolver._options">
            <summary>
            ES选项配置
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IndexNameResolver.#ctor(Microsoft.Extensions.Options.IOptions{Bing.Elasticsearch.Options.ElasticsearchOptions})">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Repositories.IndexNameResolver"/>类型的实例
            </summary>
            <param name="options">ES选项配置</param>
        </member>
        <member name="M:Bing.Elasticsearch.Repositories.IndexNameResolver.GetIndexName(System.String)">
            <summary>
            获取索引名称
            </summary>
            <param name="indexName">索引名称</param>
        </member>
        <member name="T:Bing.Elasticsearch.SelectClauseExtensions">
            <summary>
            Select子句操作扩展
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.SelectClauseExtensions.Select``1(``0)">
            <summary>
            设置星号*列
            </summary>
            <typeparam name="T">源类型</typeparam>
            <param name="source">源</param>
        </member>
        <member name="M:Bing.Elasticsearch.SelectClauseExtensions.Select``1(``0,System.String)">
            <summary>
            设置列名
            </summary>
            <typeparam name="T">源类型</typeparam>
            <param name="source">源</param>
            <param name="columns">列名，范例：appId,id,name</param>
        </member>
        <member name="M:Bing.Elasticsearch.SelectClauseExtensions.RemoveSelect``1(``0,System.String)">
            <summary>
            移除列名
            </summary>
            <typeparam name="T">源类型</typeparam>
            <param name="source">源</param>
            <param name="columns">列名，范例：appId,id,name</param>
        </member>
        <member name="T:Bing.Elasticsearch.WhereClauseExtensions">
            <summary>
            Where子句操作扩展
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.ElasticsearchContext">
            <summary>
            ES上下文
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.ElasticsearchContext._provider">
            <summary>
            ES客户端提供程序
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.ElasticsearchContext._resolver">
            <summary>
            索引名称解析器
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.ElasticsearchContext._client">
            <summary>
            ES客户端
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.ElasticsearchContext._options">
            <summary>
            ES选项配置
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.ElasticsearchContext._mappingFactory">
            <summary>
            ES映射工厂
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.ElasticsearchContext._logger">
            <summary>
            日志
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.#ctor(Bing.Elasticsearch.Provider.IElasticClientProvider,Bing.Elasticsearch.Repositories.IIndexNameResolver,Bing.Elasticsearch.Mapping.IElasticMappingFactory,Microsoft.Extensions.Options.IOptions{Bing.Elasticsearch.Options.ElasticsearchOptions},Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.ElasticsearchContext"/>类型的实例
            </summary>
            <param name="provider">ES客户端提供程序</param>
            <param name="resolver">索引名称解析器</param>
            <param name="mappingFactory">ES映射工厂</param>
            <param name="options">ES选项配置</param>
            <param name="loggerFactory">日志工厂</param>
        </member>
        <member name="P:Bing.Elasticsearch.ElasticsearchContext.LoggerFactory">
            <summary>
            日志工厂
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.AliasExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            是否存在指定索引别名
            </summary>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.IndexExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            是否存在指定索引名称
            </summary>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellation">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.GetIndexesByAliasAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            获取索引名称列表
            </summary>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.CreateIndexAsync(System.String,System.String,System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest},System.Threading.CancellationToken)">
            <summary>
            创建索引
            </summary>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="selector">映射操作</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.CreateIndexAsync``1(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            创建索引
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.DeleteIndexAsync``1(System.Threading.CancellationToken)">
            <summary>
            删除索引
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.DeleteIndexAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            删除索引
            </summary>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.DeleteIndexesByAliasAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            通过别名删除索引集合
            </summary>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.DeleteIndexesAsync(System.String[],System.Threading.CancellationToken)">
            <summary>
            删除多个索引
            </summary>
            <param name="names">索引名称数组</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.DeleteAllIndexAsync(System.Threading.CancellationToken)">
            <summary>
            删除全部索引
            </summary>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.AddIndexesToAliasAsync(System.String,System.String[])">
            <summary>
            添加索引列表到别名
            </summary>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="indexes">索引名称列表。注意：必须小写</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.RemoveIndexesFromAliasAsync(System.String,System.String[])">
            <summary>
            从别名中移除索引列表
            </summary>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="indexes">索引名称列表。注意：必须小写</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.GetIndexName``1(System.String)">
            <summary>
            获取索引名称
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="index">索引名称。注意：必须小写</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.GetIndexName(System.String)">
            <summary>
            获取索引名称
            </summary>
            <param name="index">索引名称。注意：必须小写</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.GetAllAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            获取全部数据。
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
            <remarks>说明：最多返回10000条</remarks>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.FindByIdAsync``1(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            通过标识查找
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="id">文档标识</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.FindByIdsAsync``1(System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            通过标识集合查找
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="ids">文档标识集合</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.FindByIdsAsync``1(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.Threading.CancellationToken)">
            <summary>
            通过标识集合查找
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="ids">文档标识集合</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.FindByIdsAsync``1(System.String,System.String[])">
            <summary>
            通过标识集合查找
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="ids">文档标识集合</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.FindByIdsAsync``1(System.String,System.Int64[])">
            <summary>
            通过标识集合查找
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="ids">文档标识集合</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.SearchAsync``1(System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer},System.String,System.Threading.CancellationToken)">
            <summary>
            查询
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="searchTerms">查询条件</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.SearchAsync``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest},System.Threading.CancellationToken)">
            <summary>
            查询
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="selector">查询表达式</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.ScrollAll``1(Nest.Time,System.Int32,System.Func{Nest.ScrollAllDescriptor{``0},Nest.IScrollAllRequest},System.Threading.CancellationToken)">
            <summary>
            滚动查询
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="timeout">超时时间</param>
            <param name="numberOfReplicas">切片数</param>
            <param name="selector">查询表达式</param>
            <param name="cancellationToken">取消令牌</param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.ScrollAll``1(System.Int32,System.Int32,System.TimeSpan,System.Func{Nest.ScrollAllDescriptor{``0},Nest.IScrollAllRequest},System.Threading.CancellationToken)">
            <summary>
            滚动查询
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="timeout">超时时间。单位：秒</param>
            <param name="numberOfReplicas">切片数</param>
            <param name="maximumRunTime">查询最大超时时间</param>
            <param name="selector">查询表达式</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.ScrollAll``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest},System.Int32,System.Double,System.Int32,System.Threading.CancellationToken)">
            <summary>
            滚动查询
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="selector">查询表达式</param>
            <param name="timeout">超时时间，单位：秒。默认：10秒</param>
            <param name="maximumRunTime">查询最大超时时间，单位：分钟。默认：20分钟</param>
            <param name="maxDegreeOfParallelism">最大并行度。默认：3</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.CountAsync``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest},System.Threading.CancellationToken)">
            <summary>
            获取计数
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="selector">查询表达式</param>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.GetClient">
            <summary>
            获取客户端
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.GetClient``1">
            <summary>
            获取客户端
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.AddAsync``1(``0,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            添加文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="document">文档对象</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="id">文档标识</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.BulkSaveAsync``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Double,System.Threading.CancellationToken)">
            <summary>
            批量保存文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="documents">文档对象列表</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="timeout">超时时间间隔。单位：毫秒，默认值：300000，即5分钟</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.DeleteAsync``1(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            删除文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="id">文档标识</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.DeleteAsync``1(``0,System.String,System.Threading.CancellationToken)">
            <summary>
            删除文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="document">文档</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.DeleteByQueryAsync``1(System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest},System.Threading.CancellationToken)">
            <summary>
            按查询条件删除文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="selector">删除表达式</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.UpdateAsync``1(``0,System.String,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="document">文档</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.UpdateAsync``1(System.Object,``0,System.String,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="id">文档标识</param>
            <param name="document">文档</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.UpdateByQueryAsync``1(System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest},System.Threading.CancellationToken)">
            <summary>
            按查询条件更新文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="selector">更新表达式</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.ExistsAsync``1(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            是否存在指定文档标识
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="id">文档标识</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContext.GetTotalCountAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            获取文档计数
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="T:Bing.Elasticsearch.ElasticsearchException">
            <summary>
            Elasticsearch 异常
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchException.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.ElasticsearchException"/>类型的实例
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.ElasticsearchException"/>类型的实例
            </summary>
            <param name="serializationInfo">序列号信息</param>
            <param name="context">流上下文</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchException.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.ElasticsearchException"/>类型的实例
            </summary>
            <param name="message">错误消息</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchException.#ctor(System.String,System.Exception)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.ElasticsearchException"/>类型的实例
            </summary>
            <param name="message">错误消息</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="T:Bing.Elasticsearch.Exceptions.DocumentException">
            <summary>
            文档异常
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Exceptions.DocumentException.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Exceptions.DocumentException"/>类型的实例
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Exceptions.DocumentException.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Exceptions.DocumentException"/>类型的实例
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:Bing.Elasticsearch.Exceptions.DocumentException.#ctor(System.String,System.Exception)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Exceptions.DocumentException"/>类型的实例
            </summary>
            <param name="message">消息</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="T:Bing.Elasticsearch.Exceptions.DuplicateDocumentException">
            <summary>
            重复文档异常
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Exceptions.DuplicateDocumentException.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Exceptions.DuplicateDocumentException"/>类型的实例
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Exceptions.DuplicateDocumentException.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Exceptions.DuplicateDocumentException"/>类型的实例
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:Bing.Elasticsearch.Exceptions.DuplicateDocumentException.#ctor(System.String,System.Exception)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Exceptions.DuplicateDocumentException"/>类型的实例
            </summary>
            <param name="message">消息</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="T:Bing.Elasticsearch.Exceptions.EsRepositoryException">
            <summary>
            ES仓储异常
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Exceptions.EsRepositoryException.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Exceptions.EsRepositoryException"/>类型的实例
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Exceptions.EsRepositoryException.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Exceptions.EsRepositoryException"/>类型的实例
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:Bing.Elasticsearch.Exceptions.EsRepositoryException.#ctor(System.String,System.Exception)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Exceptions.EsRepositoryException"/>类型的实例
            </summary>
            <param name="message">消息</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="T:Bing.Elasticsearch.Exceptions.VersionConflictDocumentException">
            <summary>
            版本冲突文档异常
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Exceptions.VersionConflictDocumentException.#ctor">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Exceptions.VersionConflictDocumentException"/>类型的实例
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Exceptions.VersionConflictDocumentException.#ctor(System.String)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Exceptions.VersionConflictDocumentException"/>类型的实例
            </summary>
            <param name="message">消息</param>
        </member>
        <member name="M:Bing.Elasticsearch.Exceptions.VersionConflictDocumentException.#ctor(System.String,System.Exception)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Exceptions.VersionConflictDocumentException"/>类型的实例
            </summary>
            <param name="message">消息</param>
            <param name="innerException">内部异常</param>
        </member>
        <member name="T:Bing.Elasticsearch.Extensions">
            <summary>
            Elasticsearch 扩展
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Extensions.AddElasticsearch(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Bing.Elasticsearch.Options.ElasticsearchOptions})">
            <summary>
            注册Elasticsearch日志操作
            </summary>
            <param name="services">服务集合</param>
            <param name="setupAction">配置操作</param>
        </member>
        <member name="T:Bing.Elasticsearch.ElasticClientExtensions">
            <summary>
            ES客户端(<see cref="T:Nest.IElasticClient"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticClientExtensions.CreateIndexAsync``1(Nest.IElasticClient,System.String,System.Int32,System.Int32,System.Threading.CancellationToken)">
            <summary>
            创建索引
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="client">ES客户端</param>
            <param name="indexName">索引名</param>
            <param name="numberOfShards">主分片数量</param>
            <param name="numberOfReplicas">每个主分片的副分片数量</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="T:Bing.Elasticsearch.ElasticExtensions">
            <summary>
            Elastic 相关扩展
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticExtensions.GetErrorMessage(Elasticsearch.Net.IElasticsearchResponse,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            获取错误消息
            </summary>
            <param name="elasticResponse">es响应内容</param>
            <param name="message">消息</param>
            <param name="normalize">是否标准化输出</param>
            <param name="includeResponse">是否包含响应内容</param>
            <param name="includeDebugInformation">是否包含调试信息</param>
            <returns>处理后的错误消息</returns>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticExtensions.GetRequest(Elasticsearch.Net.IElasticsearchResponse,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            获取请求
            </summary>
            <param name="elasticResponse">es响应内容</param>
            <param name="normalize">是否标准化输出</param>
            <param name="includeResponse">是否包含响应内容</param>
            <param name="includeDebugInformation">是否包含调试信息</param>
            <returns>处理后请求内容</returns>
        </member>
        <member name="T:Bing.Elasticsearch.ElasticMappingExtensions">
            <summary>
            ES映射扩展
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticMappingExtensions.AddKeywordField``1(Nest.TextPropertyDescriptor{``0})">
            <summary>
            添加关键词(keyword)字段。注意：不能与 AddSortField 链式调用，如要调用则 AddKeywordAndSortFields。
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="descriptor">文本属性描述符</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticMappingExtensions.AddSortField``1(Nest.TextPropertyDescriptor{``0},System.String)">
            <summary>
            添加排序(sort)字段。注意：不能与 AddKeywordField 链式调用，如要调用则 AddKeywordAndSortFields。
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="descriptor">文本属性描述符</param>
            <param name="normalizer">排序规范器</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticMappingExtensions.AddKeywordAndSortFields``1(Nest.TextPropertyDescriptor{``0},System.String)">
            <summary>
            添加关键词(keyword)及排序(sort)字段
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="descriptor">文本属性描述符</param>
            <param name="sortNormalizer">排序规范器</param>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticMappingExtensions.AddSortNormalizer(Nest.AnalysisDescriptor)">
            <summary>
            添加排序规范器
            </summary>
            <param name="descriptor">分析描述符</param>
        </member>
        <member name="F:Bing.Elasticsearch.ElasticMappingExtensions.KeywordFieldName">
            <summary>
            keyword 字段名
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.ElasticMappingExtensions.SortFieldName">
            <summary>
            sort 字段名
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.LoggerExtensions">
            <summary>
            日志(<see cref="T:Microsoft.Extensions.Logging.ILogger"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.LoggerExtensions.LogRequest(Microsoft.Extensions.Logging.ILogger,Elasticsearch.Net.IElasticsearchResponse,Microsoft.Extensions.Logging.LogLevel)">
            <summary>
            记录请求
            </summary>
            <param name="logger">日志</param>
            <param name="elasticResponse">es响应内容</param>
            <param name="logLevel">日志级别</param>
        </member>
        <member name="M:Bing.Elasticsearch.LoggerExtensions.LogErrorRequest(Microsoft.Extensions.Logging.ILogger,Elasticsearch.Net.IElasticsearchResponse,System.String,System.Object[])">
            <summary>
            记录错误请求
            </summary>
            <param name="logger">日志</param>
            <param name="elasticResponse">es响应内容</param>
            <param name="message">消息</param>
            <param name="args">参数</param>
        </member>
        <member name="M:Bing.Elasticsearch.LoggerExtensions.LogErrorRequest(Microsoft.Extensions.Logging.ILogger,System.Exception,Elasticsearch.Net.IElasticsearchResponse,System.String,System.Object[])">
            <summary>
            记录错误请求
            </summary>
            <param name="logger">日志</param>
            <param name="ex">异常</param>
            <param name="elasticResponse">es响应内容</param>
            <param name="message">消息</param>
            <param name="args">参数</param>
        </member>
        <member name="T:Bing.Elasticsearch.JsonUtility">
            <summary>
            Json工具类
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.JsonUtility.Normalize(System.String)">
            <summary>
            标准化json字符串
            </summary>
            <param name="jsonStr">json字符串</param>
            <returns>标准化后的json字符串</returns>
        </member>
        <member name="M:Bing.Elasticsearch.JsonUtility.Normalize(System.Text.Json.JsonElement)">
            <summary>
            标准化json字符串
            </summary>
            <param name="element">json元素</param>
        </member>
        <member name="M:Bing.Elasticsearch.JsonUtility.Write(System.Text.Json.JsonElement,System.Text.Json.Utf8JsonWriter)">
            <summary>
            写入
            </summary>
            <param name="element">json元素</param>
            <param name="writer">基于utf8的json写入器</param>
        </member>
        <member name="T:Bing.Elasticsearch.TextPropertyDescriptorExtensions">
            <summary>
            文本属性描述器<see cref="T:Nest.TextPropertyDescriptor`1"/> 扩展
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.TextPropertyDescriptorExtensions.IkAnalyzer``1(Nest.TextPropertyDescriptor{``0})">
            <summary>
            设置分析器为 ik_max_word，设置搜索分析器为 ik_smart
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="source">文本属性</param>
        </member>
        <member name="M:Bing.Elasticsearch.TextPropertyDescriptorExtensions.MaxWordAnalyzer``1(Nest.TextPropertyDescriptor{``0})">
            <summary>
            设置分析器为 ik_max_word
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="source">文本属性</param>
        </member>
        <member name="M:Bing.Elasticsearch.TextPropertyDescriptorExtensions.SmartSearchAnalyzer``1(Nest.TextPropertyDescriptor{``0})">
            <summary>
            设置搜索分析器为 ik_smart
            </summary>
            <typeparam name="T">实体类型</typeparam>
            <param name="source">文本属性</param>
        </member>
        <member name="T:Bing.Elasticsearch.IElasticsearchContext">
            <summary>
            ES上下文
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.IElasticsearchContext.LoggerFactory">
            <summary>
            日志工厂
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.AliasExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            是否存在指定索引别名
            </summary>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.IndexExistsAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            是否存在指定索引名称
            </summary>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellation">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.GetIndexesByAliasAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            获取索引名称列表
            </summary>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.CreateIndexAsync(System.String,System.String,System.Func{Nest.CreateIndexDescriptor,Nest.ICreateIndexRequest},System.Threading.CancellationToken)">
            <summary>
            创建索引
            </summary>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="selector">映射操作</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.CreateIndexAsync``1(System.String,System.String,System.Threading.CancellationToken)">
            <summary>
            创建索引
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.DeleteIndexAsync``1(System.Threading.CancellationToken)">
            <summary>
            删除索引
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.DeleteIndexAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            删除索引
            </summary>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.DeleteIndexesByAliasAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            通过别名删除索引集合
            </summary>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.DeleteAllIndexAsync(System.Threading.CancellationToken)">
            <summary>
            删除全部索引
            </summary>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.AddIndexesToAliasAsync(System.String,System.String[])">
            <summary>
            添加索引列表到别名
            </summary>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="indexes">索引名称列表。注意：必须小写</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.RemoveIndexesFromAliasAsync(System.String,System.String[])">
            <summary>
            从别名中移除索引列表
            </summary>
            <param name="alias">别名名称。注意：必须小写</param>
            <param name="indexes">索引名称列表。注意：必须小写</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.GetAllAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            获取全部数据。
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
            <remarks>说明：最多返回10000条</remarks>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.FindByIdAsync``1(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            通过标识查找
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="id">文档标识</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.FindByIdsAsync``1(System.Collections.Generic.IEnumerable{System.String},System.String,System.Threading.CancellationToken)">
            <summary>
            通过标识集合查找
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="ids">文档标识集合</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.FindByIdsAsync``1(System.Collections.Generic.IEnumerable{System.Int64},System.String,System.Threading.CancellationToken)">
            <summary>
            通过标识集合查找
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="ids">文档标识集合</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.FindByIdsAsync``1(System.String,System.String[])">
            <summary>
            通过标识集合查找
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="ids">文档标识集合</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.FindByIdsAsync``1(System.String,System.Int64[])">
            <summary>
            通过标识集合查找
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="ids">文档标识集合</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.SearchAsync``1(System.Func{Nest.QueryContainerDescriptor{``0},Nest.QueryContainer},System.String,System.Threading.CancellationToken)">
            <summary>
            查询
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="searchTerms">查询条件</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.SearchAsync``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest},System.Threading.CancellationToken)">
            <summary>
            查询
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="selector">查询表达式</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.ScrollAll``1(Nest.Time,System.Int32,System.Func{Nest.ScrollAllDescriptor{``0},Nest.IScrollAllRequest},System.Threading.CancellationToken)">
            <summary>
            滚动查询
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="timeout">超时时间</param>
            <param name="numberOfReplicas">切片数</param>
            <param name="selector">查询表达式</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.ScrollAll``1(System.Int32,System.Int32,System.TimeSpan,System.Func{Nest.ScrollAllDescriptor{``0},Nest.IScrollAllRequest},System.Threading.CancellationToken)">
            <summary>
            滚动查询
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="timeout">超时时间。单位：秒</param>
            <param name="numberOfReplicas">切片数</param>
            <param name="maximumRunTime">查询最大超时时间</param>
            <param name="selector">查询表达式</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.ScrollAll``1(System.Func{Nest.SearchDescriptor{``0},Nest.ISearchRequest},System.Int32,System.Double,System.Int32,System.Threading.CancellationToken)">
            <summary>
            滚动查询
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="selector">查询表达式</param>
            <param name="timeout">超时时间，单位：秒。默认：10秒</param>
            <param name="maximumRunTime">查询最大超时时间，单位：分钟。默认：20分钟</param>
            <param name="maxDegreeOfParallelism">最大并行度。默认：3</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.GetClient">
            <summary>
            获取客户端
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.GetClient``1">
            <summary>
            获取客户端
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.AddAsync``1(``0,System.String,System.Object,System.Threading.CancellationToken)">
            <summary>
            添加文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="document">文档对象</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="id">文档标识</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.BulkSaveAsync``1(System.Collections.Generic.IEnumerable{``0},System.String,System.Double,System.Threading.CancellationToken)">
            <summary>
            批量保存文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="documents">文档对象列表</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="timeout">超时时间间隔。单位：毫秒，默认值：300000，即5分钟</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.DeleteAsync``1(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            删除文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="id">文档标识</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.DeleteAsync``1(``0,System.String,System.Threading.CancellationToken)">
            <summary>
            删除文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="document">文档</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.DeleteByQueryAsync``1(System.Func{Nest.DeleteByQueryDescriptor{``0},Nest.IDeleteByQueryRequest},System.Threading.CancellationToken)">
            <summary>
            按查询条件删除文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="selector">删除表达式</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.UpdateAsync``1(``0,System.String,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="document">文档</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.UpdateAsync``1(System.Object,``0,System.String,System.Threading.CancellationToken)">
            <summary>
            更新文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="id">文档标识</param>
            <param name="document">文档</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.UpdateByQueryAsync``1(System.Func{Nest.UpdateByQueryDescriptor{``0},Nest.IUpdateByQueryRequest},System.Threading.CancellationToken)">
            <summary>
            按查询条件更新文档
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="selector">更新表达式</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.ExistsAsync``1(System.Object,System.String,System.Threading.CancellationToken)">
            <summary>
            是否存在指定文档标识
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="id">文档标识</param>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.GetTotalCountAsync``1(System.String,System.Threading.CancellationToken)">
            <summary>
            获取文档计数
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="index">索引名称。注意：必须小写</param>
            <param name="cancellationToken">取消令牌</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.CountAsync``1(System.Func{Nest.CountDescriptor{``0},Nest.ICountRequest},System.Threading.CancellationToken)">
            <summary>
            获取计数
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="selector">查询表达式</param>
            <param name="cancellationToken"></param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.GetIndexName``1(System.String)">
            <summary>
            获取索引名称
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="index">索引名称。注意：必须小写</param>
        </member>
        <member name="M:Bing.Elasticsearch.IElasticsearchContext.GetIndexName(System.String)">
            <summary>
            获取索引名称
            </summary>
            <param name="index">索引名称。注意：必须小写</param>
        </member>
        <member name="T:Bing.Elasticsearch.Internals.Helper">
            <summary>
            内部帮助类
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Internals.Helper.IndexCacheDict">
            <summary>
            索引缓存字典
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Internals.Helper.SafeIndexName``1(System.String,System.String)">
            <summary>
            安全获取索引名称
            </summary>
            <typeparam name="TDocument">文档类型</typeparam>
            <param name="index">索引名称。注意：必须小写</param>
        </member>
        <member name="M:Bing.Elasticsearch.Internals.Helper.SafeIndexName(System.Type,System.String)">
            <summary>
            安全获取索引名称
            </summary>
            <param name="type">文档类型</param>
            <param name="index">索引名称。注意：必须小写</param>
        </member>
        <member name="M:Bing.Elasticsearch.Internals.Helper.GetEsId(System.Object)">
            <summary>
            获取ES标识
            </summary>
            <param name="id">标识</param>
        </member>
        <member name="T:Bing.Elasticsearch.Mapping.DefaultElasticMapping">
            <summary>
            默认映射
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.DefaultElasticMapping.#ctor(System.Type,Bing.Elasticsearch.Options.ElasticsearchOptions)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Mapping.ElasticMapping"/>类型的实例
            </summary>
            <param name="type">类型</param>
            <param name="options">ES选项配置</param>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.DefaultElasticMapping.ConfigureIndex(Nest.CreateIndexDescriptor)">
            <summary>
            配置索引
            </summary>
            <param name="idx">创建索引描述符</param>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.DefaultElasticMapping.ConfigureIndexSettings(Nest.IndexSettingsDescriptor)">
            <summary>
            配置索引设置
            </summary>
            <param name="settings">索引设置描述符</param>
        </member>
        <member name="T:Bing.Elasticsearch.Mapping.ElasticMapping">
            <summary>
            ES 映射
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Mapping.ElasticMapping.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Mapping.ElasticMapping.Name">
            <summary>
            索引名称
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Mapping.ElasticMapping.HasMultipleIndexes">
            <summary>
            是否拥有多个索引
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Mapping.ElasticMapping.Options">
            <summary>
            ES选项配置
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMapping.#ctor(System.Type,Bing.Elasticsearch.Options.ElasticsearchOptions)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Mapping.ElasticMapping"/>类型的实例
            </summary>
            <param name="type">类型</param>
            <param name="options">ES选项配置</param>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMapping.Map(Nest.CreateIndexDescriptor)">
            <summary>
            映射
            </summary>
            <param name="descriptor">创建索引描述符</param>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMapping.ConfigureIndex(Nest.CreateIndexDescriptor)">
            <summary>
            配置索引
            </summary>
            <param name="idx">创建索引描述符</param>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMapping.ConfigureIndexAliases(Nest.AliasesDescriptor)">
            <summary>
            配置索引别名
            </summary>
            <param name="aliases">别名描述符</param>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMapping.ConfigureIndexSettings(Nest.IndexSettingsDescriptor)">
            <summary>
            配置索引设置
            </summary>
            <param name="settings">索引设置描述符</param>
        </member>
        <member name="T:Bing.Elasticsearch.Mapping.ElasticMapping`1">
            <summary>
            ES映射
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMapping`1.#ctor(System.Type,Bing.Elasticsearch.Options.ElasticsearchOptions)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Mapping.ElasticMapping"/>类型的实例
            </summary>
            <param name="type">类型</param>
            <param name="options">ES选项配置</param>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMapping`1.ConfigureIndexMapping(Nest.TypeMappingDescriptor{`0})">
            <summary>
            配置索引映射
            </summary>
            <param name="map">映射</param>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMapping`1.ConfigureIndex(Nest.CreateIndexDescriptor)">
            <summary>
            配置索引
            </summary>
            <param name="idx">创建索引描述符</param>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMapping`1.ConfigureIndexSettings(Nest.IndexSettingsDescriptor)">
            <summary>
            配置索引设置
            </summary>
            <param name="settings">索引设置描述符</param>
        </member>
        <member name="T:Bing.Elasticsearch.Mapping.ElasticMappingFactory">
            <summary>
            ES映射工厂
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Mapping.ElasticMappingFactory.RefInstanceType">
            <summary>
            反射实例类型
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Mapping.ElasticMappingFactory._options">
            <summary>
            ES选项配置
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Mapping.ElasticMappingFactory._finder">
            <summary>
            ES映射 类型查找器
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Mapping.ElasticMappingFactory.MappingDict">
            <summary>
            映射字典
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMappingFactory.#ctor(Microsoft.Extensions.Options.IOptions{Bing.Elasticsearch.Options.ElasticsearchOptions},Bing.Elasticsearch.Mapping.IElasticMappingTypeFinder)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Mapping.ElasticMappingFactory"/>类型的实例
            </summary>
            <param name="options">ES选项配置</param>
            <param name="finder">ES映射 类型查找器</param>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMappingFactory.InitMapping">
            <summary>
            初始化映射
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMappingFactory.GetMapping(System.Type)">
            <summary>
            获取ES映射类
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMappingFactory.GetMapping``1">
            <summary>
            获取ES映射类
            </summary>
            <typeparam name="T">泛型类型</typeparam>
        </member>
        <member name="T:Bing.Elasticsearch.Mapping.ElasticMappingTypeFinder">
            <summary>
            ES映射 类型查找器
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Mapping.ElasticMappingTypeFinder._allAssemblyFinder">
            <summary>
            所有程序集查找器
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMappingTypeFinder.#ctor(Bing.Reflection.IAllAssemblyFinder)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Mapping.ElasticMappingTypeFinder"/>类型的实例
            </summary>
            <param name="allAssemblyFinder">所有程序集查找器</param>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.ElasticMappingTypeFinder.FindAllItems">
            <inheritdoc />
        </member>
        <member name="T:Bing.Elasticsearch.Mapping.IElasticMapping">
            <summary>
            ES映射
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Mapping.IElasticMapping.Type">
            <summary>
            类型
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Mapping.IElasticMapping.Name">
            <summary>
            索引名称
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Mapping.IElasticMapping.HasMultipleIndexes">
            <summary>
            是否拥有多个索引
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.IElasticMapping.Map(Nest.CreateIndexDescriptor)">
            <summary>
            映射
            </summary>
            <param name="descriptor">创建索引描述符</param>
        </member>
        <member name="T:Bing.Elasticsearch.Mapping.IElasticMapping`1">
            <summary>
            ES映射
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.IElasticMapping`1.ConfigureIndexMapping(Nest.TypeMappingDescriptor{`0})">
            <summary>
            配置索引映射
            </summary>
            <param name="map">映射</param>
        </member>
        <member name="T:Bing.Elasticsearch.Mapping.IElasticMappingFactory">
            <summary>
            ES映射工厂
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.IElasticMappingFactory.GetMapping(System.Type)">
            <summary>
            获取ES映射类
            </summary>
            <param name="type">类型</param>
        </member>
        <member name="M:Bing.Elasticsearch.Mapping.IElasticMappingFactory.GetMapping``1">
            <summary>
            获取ES映射类
            </summary>
            <typeparam name="T">泛型类型</typeparam>
        </member>
        <member name="T:Bing.Elasticsearch.Mapping.IElasticMappingTypeFinder">
            <summary>
            ES映射 类型查找器
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Model.HighlightParam">
            <summary>
            高亮参数
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.HighlightParam.Keys">
            <summary>
            高亮字段
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.HighlightParam.PreTags">
            <summary>
            高亮标签
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.HighlightParam.PostTags">
            <summary>
            高亮标签
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.HighlightParam.PrefixOfKey">
            <summary>
            高亮字段前缀。
            例如：title 高亮值赋值给 h_title
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.HighlightParam.ReplaceAuto">
            <summary>
            是否替换原来的值
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Model.IPageParam">
            <summary>
            分页参数
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.IPageParam.Page">
            <summary>
            页数，即第几页，从1开始
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.IPageParam.PageSize">
            <summary>
            每页显示行数
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.IPageParam.Keyword">
            <summary>
            关键词
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.IPageParam.GetSkipCount">
            <summary>
            获取跳过的行数
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.IPageParam.Operator">
            <summary>
            运算符
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.IPageParam.Highlight">
            <summary>
            高亮参数
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Model.PageParam">
            <summary>
            分页参数
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.PageParam.Page">
            <summary>
            页数，即第几页，从1开始
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.PageParam.PageSize">
            <summary>
            每页显示行数
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.PageParam.Keyword">
            <summary>
            关键词
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.PageParam.GetSkipCount">
            <summary>
            获取跳过的行数
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.PageParam.Operator">
            <summary>
            运算符
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.PageParam.Highlight">
            <summary>
            高亮参数
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Model.PageParamWithSearch">
            <summary>
            指定字段查询
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.PageParamWithSearch.SearchKeys">
            <summary>
            查询字段列表
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Model.IQueryResult`1">
            <summary>
            查询结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="P:Bing.Elasticsearch.Model.IQueryResult`1.TotalCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.IQueryResult`1.Took">
            <summary>
            查询占用时间
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.IQueryResult`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Model.CustomQueryResult`1">
            <summary>
            自定义查询结果
            </summary>
            <typeparam name="T">实体类型</typeparam>
        </member>
        <member name="P:Bing.Elasticsearch.Model.CustomQueryResult`1.TotalCount">
            <summary>
            总行数
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.CustomQueryResult`1.Took">
            <summary>
            查询占用时间
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Model.CustomQueryResult`1.Data">
            <summary>
            数据
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Options.ElasticsearchConnectionPoolType">
            <summary>
            ES 连接池类型。
            支持ping-说明能够发现节点的状态；
            支持嗅探-说明能够发现新的节点
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Options.ElasticsearchConnectionPoolType.Static">
            <summary>
            静态连接池。推荐使用，应用于已知集群，请求时随机请求各个正常节点，支持ping，不支持嗅探
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Options.ElasticsearchConnectionPoolType.SingleNode">
            <summary>
            单节点连接池
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Options.ElasticsearchConnectionPoolType.Sniffing">
            <summary>
            嗅探连接池。可动态嗅探集群，随机请求，支持嗅探、ping
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Options.ElasticsearchConnectionPoolType.Sticky">
            <summary>
            固定连接池。选择一个可用节点作为请求主节点，支持ping，不支持嗅探
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Options.ElasticsearchConnectionPoolType.StickySniffing">
            <summary>
            固定嗅探连接池。选择一个可用节点作为请求主节点，支持ping，支持嗅探
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.Options.ElasticsearchOptions">
            <summary>
            ES选项配置
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Options.ElasticsearchOptions.Urls">
            <summary>
            ES服务地址
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Options.ElasticsearchOptions.DefaultIndex">
            <summary>
            默认索引名称
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Options.ElasticsearchOptions.Version">
            <summary>
            ES版本(默认>=7.0)
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Options.ElasticsearchOptions.UserName">
            <summary>
            用户名
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Options.ElasticsearchOptions.Password">
            <summary>
            密码
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Options.ElasticsearchOptions.DisableDebugInfo">
            <summary>
            是否禁用调试信息
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Options.ElasticsearchOptions.ThrowExceptions">
            <summary>
            抛出异常。默认：false，错误信息在每个操作的response中
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Options.ElasticsearchOptions.DisablePing">
            <summary>
            是否禁用ping。禁用ping，第一次使用节点或使用被标记死亡的节点进行ping
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Options.ElasticsearchOptions.PoolType">
            <summary>
            连接池类型
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Options.ElasticsearchOptions.NumberOfShards">
            <summary>
            主分片数量
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Options.ElasticsearchOptions.NumberOfReplicas">
            <summary>
            每个主分片的副分片数量
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Options.ElasticsearchOptions.Prefix">
            <summary>
            索引前缀（防止索引名称重复）
            </summary>
        </member>
        <member name="P:Bing.Elasticsearch.Options.ElasticsearchOptions.CheckIndex">
            <summary>
            是否检查索引
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Options.ElasticsearchOptions.IsCompatibleVersion">
            <summary>
            兼容版本(>=7.0)
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Options.ElasticsearchOptions.Validate(Bing.Elasticsearch.Options.ElasticsearchOptions)">
            <summary>
            验证配置是否有效
            </summary>
            <param name="options">ES选项配置</param>
        </member>
        <member name="T:Bing.Elasticsearch.Provider.ElasticClientProvider">
            <summary>
            ES客户端提供程序
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Provider.ElasticClientProvider._options">
            <summary>
            ES选项配置
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Provider.ElasticClientProvider._connectionPool">
            <summary>
            ES连接池
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Provider.ElasticClientProvider._esClientDict">
            <summary>
            ES客户端字典
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Provider.ElasticClientProvider.#ctor(Microsoft.Extensions.Options.IOptions{Bing.Elasticsearch.Options.ElasticsearchOptions})">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Provider.ElasticClientProvider"/>类型的实例
            </summary>
            <param name="options">ES选项配置</param>
        </member>
        <member name="M:Bing.Elasticsearch.Provider.ElasticClientProvider.CreateConnectionPool">
            <summary>
            创建连接池
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Provider.ElasticClientProvider.ConfigSettings(Nest.ConnectionSettings)">
            <summary>
            配置连接设置
            </summary>
            <param name="settings">连接设置</param>
        </member>
        <member name="M:Bing.Elasticsearch.Provider.ElasticClientProvider.GetClient">
            <summary>
            获取ES客户端
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Provider.ElasticClientProvider.GetClient(System.String)">
            <summary>
            获取ES客户端
            </summary>
            <param name="indexName">索引名</param>
        </member>
        <member name="M:Bing.Elasticsearch.Provider.ElasticClientProvider.GetLowLowLevelClient(System.String)">
            <summary>
            获取降级后的ES客户端
            </summary>
            <param name="indexName">索引名</param>
        </member>
        <member name="T:Bing.Elasticsearch.Provider.IElasticClientProvider">
            <summary>
            ES客户端提供程序
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Provider.IElasticClientProvider.GetClient">
            <summary>
            获取ES客户端
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Provider.IElasticClientProvider.GetClient(System.String)">
            <summary>
            获取ES客户端
            </summary>
            <param name="indexName">索引名</param>
        </member>
        <member name="M:Bing.Elasticsearch.Provider.IElasticClientProvider.GetLowLowLevelClient(System.String)">
            <summary>
            获取降级后的ES客户端
            </summary>
            <param name="indexName">索引名</param>
        </member>
    </members>
</doc>
