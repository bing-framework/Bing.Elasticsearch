<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Bing.Extensions.Elasticsearch</name>
    </assembly>
    <members>
        <member name="T:Bing.Data.IEsCondition">
            <summary>
            ES搜索条件
            </summary>
        </member>
        <member name="M:Bing.Data.IEsCondition.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="T:Bing.Data.Queries.Conditions.DateRangeEsCondition`2">
            <summary>
            日期范围过滤条件 - 不包含时间
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateRangeEsCondition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Nullable{System.DateTime},System.Nullable{System.DateTime},Bing.Data.Queries.Boundary)">
            <summary>
            初始化一个<see cref="T:Bing.Data.Queries.Conditions.DateRangeEsCondition`2"/>类型的实例
            </summary>
            <param name="propertyExpression">属性表达式</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateRangeEsCondition`2.GetMinValue">
            <summary>
            获取最小值
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateRangeEsCondition`2.GetMaxValue">
            <summary>
            获取最大值
            </summary>
        </member>
        <member name="T:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2">
            <summary>
            日期范围过滤条件 - 包含时间
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Nullable{System.DateTime},System.Nullable{System.DateTime},Bing.Data.Queries.Boundary)">
            <summary>
            初始化一个<see cref="T:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2"/>类型的实例
            </summary>
            <param name="propertyExpression">属性表达式</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.IsMinGreaterMax(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            最小值是否大于最大值
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.CreateCondition">
            <summary>
            创建查询条件
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.SetField(Nest.DateRangeQuery,Nest.Field)">
            <summary>
            设置字段
            </summary>
            <param name="condition">查询条件</param>
            <param name="field">字段</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.SetGreaterEqual(Nest.DateRangeQuery,System.Nullable{System.DateTime})">
            <summary>
            设置大于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.SetGreater(Nest.DateRangeQuery,System.Nullable{System.DateTime})">
            <summary>
            设置大于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.SetLessEqual(Nest.DateRangeQuery,System.Nullable{System.DateTime})">
            <summary>
            设置小于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DateTimeRangeEsCondition`2.SetLess(Nest.DateRangeQuery,System.Nullable{System.DateTime})">
            <summary>
            设置小于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="T:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2">
            <summary>
            double范围过滤条件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Nullable{System.Double},System.Nullable{System.Double},Bing.Data.Queries.Boundary)">
            <summary>
            初始化一个<see cref="T:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2"/>类型的实例
            </summary>
            <param name="propertyExpression">属性表达式</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.IsMinGreaterMax(System.Nullable{System.Double},System.Nullable{System.Double})">
            <summary>
            最小值是否大于最大值
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.CreateCondition">
            <summary>
            创建查询条件
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.SetField(Nest.NumericRangeQuery,Nest.Field)">
            <summary>
            设置字段
            </summary>
            <param name="condition">查询条件</param>
            <param name="field">字段</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.SetGreaterEqual(Nest.NumericRangeQuery,System.Nullable{System.Double})">
            <summary>
            设置大于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.SetGreater(Nest.NumericRangeQuery,System.Nullable{System.Double})">
            <summary>
            设置大于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.SetLessEqual(Nest.NumericRangeQuery,System.Nullable{System.Double})">
            <summary>
            设置小于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.DoubleRangeEsCondition`2.SetLess(Nest.NumericRangeQuery,System.Nullable{System.Double})">
            <summary>
            设置小于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="T:Bing.Data.Queries.Conditions.LongRangeEsCondition`2">
            <summary>
            long范围过滤退案件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Nullable{System.Int64},System.Nullable{System.Int64},Bing.Data.Queries.Boundary)">
            <summary>
            初始化一个<see cref="T:Bing.Data.Queries.Conditions.LongRangeEsCondition`2"/>类型的实例
            </summary>
            <param name="propertyExpression">属性表达式</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.IsMinGreaterMax(System.Nullable{System.Int64},System.Nullable{System.Int64})">
            <summary>
            最小值是否大于最大值
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.CreateCondition">
            <summary>
            创建查询条件
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.SetField(Nest.LongRangeQuery,Nest.Field)">
            <summary>
            设置字段
            </summary>
            <param name="condition">查询条件</param>
            <param name="field">字段</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.SetGreaterEqual(Nest.LongRangeQuery,System.Nullable{System.Int64})">
            <summary>
            设置大于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.SetGreater(Nest.LongRangeQuery,System.Nullable{System.Int64})">
            <summary>
            设置大于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.SetLessEqual(Nest.LongRangeQuery,System.Nullable{System.Int64})">
            <summary>
            设置小于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.LongRangeEsCondition`2.SetLess(Nest.LongRangeQuery,System.Nullable{System.Int64})">
            <summary>
            设置小于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="T:Bing.Data.Queries.Conditions.RangeEsConditionBase`4">
            <summary>
            范围过滤条件
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <typeparam name="TProperty">属性类型</typeparam>
            <typeparam name="TValue">值类型</typeparam>
            <typeparam name="TQuery">查询类型</typeparam>
        </member>
        <member name="F:Bing.Data.Queries.Conditions.RangeEsConditionBase`4._field">
            <summary>
            字段
            </summary>
        </member>
        <member name="F:Bing.Data.Queries.Conditions.RangeEsConditionBase`4._min">
            <summary>
            最小值
            </summary>
        </member>
        <member name="F:Bing.Data.Queries.Conditions.RangeEsConditionBase`4._max">
            <summary>
            最大值
            </summary>
        </member>
        <member name="F:Bing.Data.Queries.Conditions.RangeEsConditionBase`4._boundary">
            <summary>
            包含边界
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.#ctor(System.Linq.Expressions.Expression{System.Func{`0,`1}},System.Nullable{`2},System.Nullable{`2},Bing.Data.Queries.Boundary)">
            <summary>
            初始化一个<see cref="T:Bing.Data.Queries.Conditions.RangeEsConditionBase`4"/>类型的实例
            </summary>
            <param name="propertyExpression">属性表达式</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.Adjust(System.Nullable{`2},System.Nullable{`2})">
            <summary>
            当最小值大于最大值时进行校正
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.IsMinGreaterMax(System.Nullable{`2},System.Nullable{`2})">
            <summary>
            最小值是否大于最大值
            </summary>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.CreateCondition">
            <summary>
            创建查询条件
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetField(`3,Nest.Field)">
            <summary>
            设置字段
            </summary>
            <param name="condition">查询条件</param>
            <param name="field">字段</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetLeftOperation(`3)">
            <summary>
            设置左操作
            </summary>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetGreaterEqual(`3,System.Nullable{`2})">
            <summary>
            设置大于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.GetMinValue">
            <summary>
            获取最小值
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetGreater(`3,System.Nullable{`2})">
            <summary>
            设置大于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="min">最小值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetRightOperation(`3)">
            <summary>
            设置右操作
            </summary>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetLessEqual(`3,System.Nullable{`2})">
            <summary>
            设置小于等于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.GetMaxValue">
            <summary>
            获取最大值
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.Conditions.RangeEsConditionBase`4.SetLess(`3,System.Nullable{`2})">
            <summary>
            设置小于操作
            </summary>
            <param name="condition">查询条件</param>
            <param name="max">最大值</param>
        </member>
        <member name="F:Bing.Data.Queries.EsQuery`1._query">
            <summary>
            查询容器
            </summary>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.And(Bing.Data.IEsCondition)">
            <summary>
            与连接
            </summary>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.And(Nest.QueryContainer)">
            <summary>
            与连接
            </summary>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Nest``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Bing.Data.IEsCondition)">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Nest``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Nest.QueryContainer)">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Nest``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{Bing.Data.Queries.EsQuery{`0}})">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="action">查询操作</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Term``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <summary>
            精确匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.TermIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object,System.Boolean)">
            <summary>
            精确匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.TermIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <summary>
            精确匹配词条，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Terms``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            精确匹配词条列表
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.TermsIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            精确匹配词条列表
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.TermsIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            精确匹配词条列表，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Match``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.MatchIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Boolean)">
            <summary>
            匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.MatchIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            匹配词条，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.MultiMatch(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            多字段匹配词条
            </summary>
            <param name="value">值</param>
            <param name="expressions">字段表达式列表</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.CreateFields(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            创建字段列表
            </summary>
            <param name="expressions">字段表达式列表</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.MultiMatchIfNotEmpty(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            多字段匹配词条，当值为空时忽略条件
            </summary>
            <param name="value">值</param>
            <param name="expressions">字段表达式列表</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Between``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Nullable{System.Int32},System.Nullable{System.Int32},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.BetweenIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Between``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Nullable{System.Double},System.Nullable{System.Double},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.BetweenIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Nullable{System.Double},System.Nullable{System.Double},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.Between``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Nullable{Bing.Data.Queries.Boundary})">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Time</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="includeTime">是否包含时间</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Data.Queries.EsQuery`1.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="T:Bing.Elasticsearch.ElasticsearchContextExtensions">
            <summary>
            ES上下文(<see cref="T:Bing.Elasticsearch.IElasticsearchContext"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.ElasticsearchContextExtensions.Search``1(Bing.Elasticsearch.IElasticsearchContext,Bing.Data.Queries.IQueryParameter)">
            <summary>
            搜索
            </summary>
            <typeparam name="TResult">结果类型</typeparam>
            <param name="context">ES上下文</param>
            <param name="query">查询参数</param>
        </member>
        <member name="T:Bing.Elasticsearch.EsRepositoryExtensions">
            <summary>
            ES仓储(<see cref="T:Bing.Elasticsearch.Repositories.IEsRepository`1"/>) 扩展
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.EsRepositoryExtensions.Search``1(Bing.Elasticsearch.Repositories.IEsRepository{``0},Bing.Data.Queries.IQueryParameter)">
            <summary>
            搜索
            </summary>
            <typeparam name="TEntity">实体类型</typeparam>
            <param name="repository">仓储</param>
            <param name="query">查询参数</param>
        </member>
        <member name="T:Bing.Elasticsearch.Model.EsSearch`1">
            <summary>
            ES查询模型
            </summary>
            <typeparam name="TResult">查询结果类型</typeparam>
        </member>
        <member name="F:Bing.Elasticsearch.Model.EsSearch`1._context">
            <summary>
            ES上下文
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Model.EsSearch`1._queryParam">
            <summary>
            查询参数
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Model.EsSearch`1._index">
            <summary>
            索引
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Model.EsSearch`1._size">
            <summary>
            分页大小
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Model.EsSearch`1._from">
            <summary>
            起始行数
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Model.EsSearch`1._sorts">
            <summary>
            排序列表
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Model.EsSearch`1._includeFields">
            <summary>
            包含字段集合
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Model.EsSearch`1._excludeFields">
            <summary>
            排除字段集合
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Model.EsSearch`1._collapseField">
            <summary>
            折叠字段
            </summary>
        </member>
        <member name="F:Bing.Elasticsearch.Model.EsSearch`1._query">
            <summary>
            搜索条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.#ctor(Bing.Elasticsearch.IElasticsearchContext,Bing.Data.Queries.IQueryParameter)">
            <summary>
            初始化一个<see cref="T:Bing.Elasticsearch.Model.EsSearch`1"/>类型的实例
            </summary>
            <param name="context">ES上下文</param>
            <param name="query">查询参数</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.Index(System.String)">
            <summary>
            设置索引名称或别名
            </summary>
            <param name="index">索引名称，也可以是别名</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.AllIndex">
            <summary>
            搜索全部索引
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.GetQuery">
            <summary>
            获取当前查询对象
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.NewQuery">
            <summary>
            创建新的查询对象
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.From(System.Int32)">
            <summary>
            设置起始行数，从0开始
            </summary>
            <param name="from">起始行数</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.Size(System.Int32)">
            <summary>
            设置分页大小
            </summary>
            <param name="size">分页大小</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.OrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            排序
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">排序字段表达式</param>
            <param name="desc">是否降序排序</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.OrderByIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Boolean)">
            <summary>
            排序
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">排序字段表达式</param>
            <param name="desc">是否降序排序</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.NestOrderBy``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean)">
            <summary>
            嵌套属性排序
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">排序路径</param>
            <param name="expression">排序字段表达式</param>
            <param name="desc">是否降序排序</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.NestOrderByIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Boolean)">
            <summary>
            嵌套属性排序
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">排序路径</param>
            <param name="expression">排序字段表达式</param>
            <param name="desc">是否降序排序</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.GetOrder(System.Boolean)">
            <summary>
            获取排序方向
            </summary>
            <param name="desc">是否降序排序</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.IncludeFields(System.String)">
            <summary>
            设置包含字段列表
            </summary>
            <param name="fields">字段列表</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.IncludeField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            设置包含字段
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.ExcludeFields(System.String)">
            <summary>
            设置排除字段列表
            </summary>
            <param name="fields">字段列表</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.ExcludeField``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            设置排除字段
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.Collapse``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            设置折叠字段
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.Nest``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Bing.Data.IEsCondition)">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.Nest``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},Nest.QueryContainer)">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="condition">查询条件</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.Nest``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Action{Bing.Data.Queries.EsQuery{`0}})">
            <summary>
            嵌套查询
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="path">嵌套字段</param>
            <param name="action">查询操作</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.Term``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <summary>
            精确匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.TermIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object,System.Boolean)">
            <summary>
            精确匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.TermIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Object)">
            <summary>
            精确匹配词条，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.Terms``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            精确匹配词条列表
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.TermsIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{System.Object},System.Boolean)">
            <summary>
            精确匹配词条列表
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.TermsIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
            精确匹配词条列表，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="values">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.Match``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.MatchIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String,System.Boolean)">
            <summary>
            匹配词条
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.MatchIfNotEmpty``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.String)">
            <summary>
            匹配词条，当值为空时忽略条件
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="expression">字段表达式</param>
            <param name="value">值</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.MultiMatch(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            多字段匹配词条
            </summary>
            <param name="value">值</param>
            <param name="expressions">字段表达式列表</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.MultiMatchIfNotEmpty(System.String,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            多字段匹配词条，当值为空时忽略条件
            </summary>
            <param name="value">值</param>
            <param name="expressions">字段表达式列表</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.Between``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Nullable{System.Int32},System.Nullable{System.Int32},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.BetweenIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Nullable{System.Int32},System.Nullable{System.Int32},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.Between``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Nullable{System.Double},System.Nullable{System.Double},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.BetweenIf``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Boolean,System.Nullable{System.Double},System.Nullable{System.Double},Bing.Data.Queries.Boundary)">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Age</param>
            <param name="condition">该值为true时添加查询条件，否则忽略</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.Between``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Nullable{System.DateTime},System.Nullable{System.DateTime},System.Boolean,System.Nullable{Bing.Data.Queries.Boundary})">
            <summary>
            匹配范围
            </summary>
            <typeparam name="TProperty">属性类型</typeparam>
            <param name="propertyExpression">属性表达式。范围：t = > t.Time</param>
            <param name="min">最小值</param>
            <param name="max">最大值</param>
            <param name="includeTime">是否包含时间</param>
            <param name="boundary">包含边界</param>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.GetResultAsync">
            <summary>
            获取结果
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.GetEsResultAsync">
            <summary>
            获取ES结果
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.GetIndex">
            <summary>
            获取索引名称
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.GetFrom">
            <summary>
            获取起始行数
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.GetSize">
            <summary>
            获取分页大小
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.GetSource">
            <summary>
            获取源过滤器
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.GetIncludeFields">
            <summary>
            获取包含字段
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.GetExcludeFields">
            <summary>
            获取排除字段
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.GetCollapse">
            <summary>
            获取折叠
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.GetCondition">
            <summary>
            获取查询条件
            </summary>
        </member>
        <member name="M:Bing.Elasticsearch.Model.EsSearch`1.CreateResult(Nest.ISearchResponse{`0})">
            <summary>
            创建分页结果
            </summary>
            <param name="result">查询响应结果</param>
        </member>
    </members>
</doc>
